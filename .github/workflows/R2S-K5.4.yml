name:  R2S-K5.4

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
  schedule:
    - cron:  '40 18 */5 * *'
env:
  REPO_URL:  https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH:  openwrt-18.06-k5.4
  SOURECE_DIR: /home/runner/immortalwrt
  FIRMWARE_DIR: /home/runner/firmware
  PACKAGE_DIR: /home/runner/package
  BUILDINFO_DIR: /home/runner/buildinfo
  UPLOAD_DIR: /home/runner/upload
  USER_HOME: /home/runner
  BIN_DIR: /home/runner/immortalwrt/bin
  CONFIG_FILE: ${GITHUB_WORKSPACE}/buildinfo/immortalwrt/R2S-config.buildinfo
  SUBTARGET: /home/runner/immortalwrt/bin/targets/rockchip/armv8
  
jobs:
  R2S:
    runs-on: ubuntu-18.04
    steps:
    
    - name: Checkout Repository
      uses: actions/checkout@v2
      
    - name: Init Building Dependencies
      env:
        DEBIAN_FRONTEND: noninteractive 
        TZ: Asia/Shanghai
      run: |
        sudo timedatectl set-timezone "$TZ"
        echo "Init Building":$(date +%F_%H%M%S)
        docker rmi $(docker images -q)
        sudo -E apt-get remove -y --purge azure-cli ghc zulu* hhvm llvm* firefox google* dotnet* powershell mysql* php* mssql-tools msodbcsql17 android*
        sudo -E apt-get update -y
        sudo -E apt-get full-upgrade -y
        sudo -E apt-get install -y build-essential asciidoc binutils bzip2 coreutils gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-8 gcc++-8 gcc-8-multilib g++-8-multilib p7zip p7zip-full msmtp libssl-dev texinfo libreadline-dev libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint ccache curl wget vim nano python python3 python-pip python3-pip python3-setuptools python-ply python3-ply haveged lrzsz device-tree-compiler scons antlr3 gperf ecj fastjar re2c xz-utils tar zip
        sudo -EH pip3 install -U pyrogram tgCrypto
        for i in $(ls /usr/bin/*-8); do sudo -E ln -sf $i ${i%%-8*}; done
        sudo -E ln -sf /usr/include/asm-generic /usr/include/asm
        sudo -E apt-get autoremove -y --purge
        sudo -E apt-get clean -y
        sudo -E swapoff -a
        sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /usr/local/lib/android /opt/ghc /swapfile
        
    - name: Clone Source
      run: |
        echo "Clone Source":$(date +%F_%H%M%S)
        df -hP
        mkdir -pv /home/runner/{firmware,package,buildinfo,upload}
        cd $USER_HOME
        git clone --branch $REPO_BRANCH --single-branch $REPO_URL "immortalwrt"
        sudo chown -R runner:runner firmware/ package/ buildinfo/ upload/ immortalwrt/
        cd $SOURECE_DIR
        sed -i 's,-SNAPSHOT,,g' include/version.mk
        sed -i 's,-SNAPSHOT,,g' package/base-files/image-config.in
        # del root's password
        sed -i '/CYXluq4wUazHjmCDBCqXF/d' /home/runner/immortalwrt/package/emortal/default-settings/files/zzz-default-settings
        cat /home/runner/immortalwrt/package/emortal/default-settings/files/zzz-default-settings
        sudo rm -rf tmp/
        ls -lah 
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        cd feeds/luci/applications/
        ls -lah luci-app-ssr-plus/ luci-app-openclash/ luci-app-passwall/  luci-app-vssr/
        rm -rf luci-app-ssr-plus/ luci-app-openclash/ luci-app-passwall/  luci-app-vssr/
        svn co https://github.com/xiaorouji/openwrt-passwall/trunk/luci-app-passwall luci-app-passwall
        svn co https://github.com/fw876/helloworld/trunk/luci-app-ssr-plus luci-app-ssr-plus
        svn co https://github.com/jerrykuku/luci-app-vssr/trunk/ luci-app-vssr
        svn co https://github.com/vernesong/OpenClash/trunk/luci-app-openclash luci-app-openclash
        ls -lah luci-app-ssr-plus/ luci-app-openclash/ luci-app-passwall/  luci-app-vssr/
        cd $SOURECE_DIR
        ./scripts/feeds install -a

    - name: Configuration Customization
      id: configuration
      run: |
        echo "Configuration Customization":$(date +%F_%H%M%S)
        cp -f ${GITHUB_WORKSPACE}/buildinfo/immortalwrt/R2S-config.buildinfo "$SOURECE_DIR/.config"
        tree "${GITHUB_WORKSPACE}"
        cp -R ${GITHUB_WORKSPACE}/files/ $SOURECE_DIR
        cp -R ${GITHUB_WORKSPACE}/app_conf/ssrplus/ $SOURECE_DIR/files/etc/vssr/
        cp -R ${GITHUB_WORKSPACE}/app_conf/ssrplus/ $SOURECE_DIR/files/etc/ssrplus/
        #cp -R ${GITHUB_WORKSPACE}/app_conf/smartdns/ $SOURECE_DIR/files/etc/smartdns/
        cd $SOURECE_DIR/files/etc/ 
        mv R2S_config config
        tree $SOURECE_DIR/files/
        cd $SOURECE_DIR 
        # VSSR
        sed -i '/result.encrypt_method/a\result.fast_open = "1"' $SOURECE_DIR/feeds/luci/applications/luci-app-vssr/root/usr/share/vssr/subscribe.lua
        sed -i 's,ispip.clang.cn/all_cn.txt,raw.sevencdn.com/QiuSimons/Chnroute/master/dist/chnroute/chnroute.txt,g' $SOURECE_DIR/feeds/luci/applications/luci-app-vssr/luasrc/controller/vssr.lua
        sed -i 's,ispip.clang.cn/all_cn.txt,raw.sevencdn.com/QiuSimons/Chnroute/master/dist/chnroute/chnroute.txt,g' $SOURECE_DIR/feeds/luci/applications/luci-app-vssr/root/usr/share/vssr/update.lua
        # ShadowsocksR Plus+
        cd $SOURECE_DIR/feeds/luci/applications/luci-app-ssr-plus
        rm -rf po/zh_Hans
        cd $SOURECE_DIR/feeds/luci/applications/
        #wget -qO - https://github.com/QiuSimons/helloworld-fw876/commit/c1674ad.patch | patch -p1
        wget -qO - https://github.com/QiuSimons/helloworld-fw876/commit/5bbf6e7.patch | patch -p1
        wget -qO - https://github.com/QiuSimons/helloworld-fw876/commit/323fbf0.patch | patch -p1
        cd luci-app-ssr-plus
        sed -i '/result.encrypt_method/a\result.fast_open = "1"' root/usr/share/shadowsocksr/subscribe.lua
        sed -i 's,ispip.clang.cn/all_cn,cdn.jsdelivr.net/gh/QiuSimons/Chnroute@master/dist/chnroute/chnroute,' root/etc/init.d/shadowsocksr
        sed -i 's,YW5vbnltb3Vz/domain-list-community/release/gfwlist.txt,Loyalsoldier/v2ray-rules-dat/release/gfw.txt,' root/etc/init.d/shadowsocksr
        sed -i '/Clang.CN.CIDR/a\o:value("https://cdn.jsdelivr.net/gh/QiuSimons/Chnroute@master/dist/chnroute/chnroute.txt", translate("QiuSimons/Chnroute"))' luasrc/model/cbi/shadowsocksr/advanced.lua
        sed -i 's/443 -j RETURN/443 -j DROP/' root/usr/bin/ssr-rules
        sed -i 's/80 -j RETURN/80 -j DROP/' root/usr/bin/ssr-rules
    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: Build
      id: build
      run: |
        echo "Build ImmortalWrt":$(date +%F_%H%M%S)
        cd $SOURECE_DIR && ls -lash
        ls -lash
        make defconfig 
        ./scripts/diffconfig.sh > R2S-config.buildinfo
        cp R2S-config.buildinfo $UPLOAD_DIR/R2S-config.buildinfo
        pwd
        cat R2S-config.buildinfo
        wc -l R2S-config.buildinfo
        echo "start make!":$(date +%F_%H%M%S)
        time make -j$[$(nproc)+1] || make -j1 V=s
        tree bin/
        tree -d bin/
        ls -lSha "$SUBTARGET"
        
    - name: Prepare artifact
      run: |
        echo "Prepare artifact":$(date +%F_%H%M%S)
        cd $SUBTARGET
        rm -rf $(find /home/runner/immortalwrt/bin/targets/ -type d -name "packages")
        cp -rf $(find  /home/runner/immortalwrt/bin/targets/ -type f) /home/runner/upload/
        cp -rf $(find /home/runner/immortalwrt/bin/packages/ -type f -name "*.ipk")  /home/runner/package/
        cd /home/runner/  && zip -qr /home/runner/upload/package_$(date +%F_%H%M%S).zip  package/
        cd /home/runner/upload/
        ls -lh 
        #for file in `ls immortalwrt*`;do filedate=$(date +%F_%H%M%S)_  file_name=$filedate$file;mv $file $file_name;done
        for source_name in `ls immortalwrt*`;do tag_name=$(date +%F_%H%M%S)_  modify_name=$tag_name$source_name;mv $source_name $modify_name;done
        ls -lh /home/runner/upload/

    - name: Deliver firmware
      uses: actions/upload-artifact@v2
      with:
        name: OpenWrt_firmware
        path: /home/runner/immortalwrt/bin/targets/rockchip/armv8/*
        if-no-files-found: ignore
        
    - name: Generate release tag
#       if: ${{ always() }}
      id: tag
      run: |
        echo "::set-output name=release_tag::immortalwrt-18.06-k5.4-R2S-$(date +%F_%H%M%S)"
        echo "::set-output name=release_date::$(date +"%F_%H%M%S")"
        touch release.txt
        echo "::set-output name=status::success"
        
    - name: Upload firmware to release
      uses: softprops/action-gh-release@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: immortalwrt-18.06-k5.4-R2S-${{ steps.tag.outputs.release_date }}
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: |
          /home/runner/upload/*

